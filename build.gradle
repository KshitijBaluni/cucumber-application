plugins {
    id 'java'
}

group 'cucumber.jvm.application'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    testCompile 'io.cucumber:cucumber-junit:4.5.0'
    compile 'io.cucumber:cucumber-java:4.5.0'
    compile group: 'io.cucumber', name: 'cucumber-testng', version: '4.5.0'
    compile 'io.rest-assured:rest-assured:3.3.0'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            println "======================Inside task cucumber =========================="

            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output

            String cucumberTagArgument
            String cucumberTag
            String threadsTagArgument
            String threadsTag

            try {
                print("=================inside try====================")
                cucumberTagArgument = '--tags'
                cucumberTag = project.property('cucumberTag')
                threadsTagArgument = '--threads'
                threadsTag = project.property('threadsTag')
                print("cucmner tag =" + cucumberTag + "  threads Count= "+threadsTag)
            } catch (MissingPropertyException e) {
                print("=================inside catch====================")
                e.printStackTrace()
                cucumberTagArgument = new String()
                cucumberTag = new String()
                threadsTagArgument = new String()
                threadsTag = new String()
            }
            args = ['--plugin', 'rerun:build/rerun.txt', '--plugin', 'pretty', '--plugin', 'html:build/html/FirstRun/', '--plugin', 'json:build/json/FirstRun/output.json', '--glue', 'steps', 'src/test/resources', "--tags", "not @End2End", cucumberTagArgument, cucumberTag, threadsTagArgument, threadsTag]
        }
    }
}

task cucumberRerun() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            println "======================Inside task cucumberRerun =========================="
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['@build/rerun.txt', '--plugin', 'pretty', '--plugin', 'html:build/html/FailedTestsReRun/', '--plugin', 'json:build/json/FailedTestsReRun/output.json', '--glue', 'steps']
        }
    }
}
